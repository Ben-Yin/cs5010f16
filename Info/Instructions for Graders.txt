INSTRUCTIONS FOR GRADERS FALL 2015

================================================================

Put the student's solution on the screen.

Run it and observe whether there is 100% test coverage (except for
calls to big-bang).

Try a few examples. (Required for big-bang programs, optional for others).

Scroll through the program, evaluating the data definitions and as
much of the program as you can, starting from the particular function
or functions specified each week.  As you read, ask the student to
explain anything you find confusing or odd.  

[Note: this replaces the old prompt of "Please explain the design of
function X.  Follow the design recipe"  You should be leading the
discussion.] 

Your goal is to get a general evaluation of the program in terms of
the descriptors on the Grade Sheet.

As you see specific deficiencies, mark them on the grade
sheet. Indicate the location if possible.  Do NOT try to convert these
individual items into point values.  

When you are done, assign each student letter grades for design and
presentation that best describes his/her performance, based on the
Key to Grades on the Grade Sheet.

================================================================

Here are a few possible interactions that you might have with a
student.  Don't follow these slavishly.  Use them as samples of the
conversations you might have.

- Student presents his/her data definitions but you notice there are no
  interpretations. You might ask: "Are you missing any data design
  components?"  If the student is vague, you can ask him to recite the
  parts of a data definition.  You could follow up by asking him to
  explain the significance of some part, e.g. "What is the purpose of
  an interpretation?"

- Student implemented a function with two compound data inputs as data
  decomposition on the first input. You might ask: "Why did you decompose the
  first input rather than the second?".  You could follow up with "How
  would your program change if you decomposed the second input first?
  Would the result be better or worse than what you wrote?"

- The demo showed a bug.  Ask: "what happened here? Why? How
  would you fix that?"

Other possible questions:

- "Your interpretation says that <some variable> contains the last
  mouse position.  What do you mean by 'the last mouse position'?  I
  notice that on <line NNN> you set this variable to 0.  Does your
  interpretation cover that case?

- Please explain how you implemented <some tricky part of the solution>?

- What would you have to do to <change some parameter>?

- Where would you make changes to accomodate <some extension>?

- How would your program behave if we changed <some parameter>?

If you are not happy with student's answer (even after
clarifications), DO NOT SAY "OK".  SAY: "I'M NOT CONVINCED (or
something like that), BUT WE NEED TO MOVE ON." 

================================================================

Section IV: Cheating or Plagiarism

If the student displays blatant ignorance about some portion of the
program, as evidenced by unsatisfactory answers to questions like

"Why did you do <X>?

"Why did you mention <some old Design Strategy>?"

"Why did you indent the program like that?"

the grader should ask:

"Did you write this program (or this portion of the program)
yourself?"

"Did you have any help doing it?"

"From whom?"

If the answers are unsatisfactory, you should say something like this
to the student:  

I'm not convinced by your account of what happened here.  It's not my
job to judge whether there's an Academic Integrity violation here, but
I'm going to flag this solution for closer scrutiny by our plagiarism
detection system.  If Prof. (Wand|Clinger|Miller) and his staff decide
there's evidence of plagiarism, you will hear from him.  If there's
something you don't want to say here, we encourage you to contact
Prof. {Wand|Clinger|Miller} directly before the plagiarism system gets
involved.

================================================================
